---
import { CollectionEntry, getCollection } from 'astro:content';
import { formatBlogPosts } from '../../utils';
import Layout from '../../layouts/Layout.astro';
import BlogCard from '../../components/BlogCard.astro';
import Pagination from '../../components/Pagination.astro';

interface BlogPage {
  data: CollectionEntry<'blog'>[];
  currentPage: number;
  lastPage: number;
  url: {
    prev?: string;
    next?: string;
  };
}

interface Pagination {
  paginate: (
    collection: CollectionEntry<'blog'>[],
    options: { pageSize: number }
  ) => Promise<{
    data: CollectionEntry<'blog'>[];
    currentPage: number;
    lastPage: number;
    url: {
      prev?: string;
      next?: string;
    };
  }>;
}

export async function getStaticPaths({ paginate }: Pagination) {
  const blogPosts = await getCollection('blog');
  const formattedPosts: CollectionEntry<'blog'>[] = formatBlogPosts(blogPosts, {
    sortByDate: true,
  });

  return paginate(formattedPosts, {
    pageSize: 8,
  });
}

const { page } = Astro.props as { page: BlogPage };
---

<Layout title='Blog' description='This is the blog'>
  <section class='bg-white py-24 sm:py-32'>
    <div class='mx-auto max-w-7xl px-6 lg:px-8'>
      <div class='mx-auto max-w-2xl text-center'>
        <h1
          class='text-3xl font-bold tracking-tight text-medium-gray sm:text-4xl'
        >
          From the blog
        </h1>
        <p class='mt-2 text-lg leading-8 text-gray-600'>
          Expert advice, plumbing tips and tricks, and more.
        </p>
      </div>

      <div
        class='mx-auto mt-16 grid max-w-2xl auto-rows-fr grid-cols-1 gap-8 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3'
      >
        {page.data.map((post) => <BlogCard {post} />)}
      </div>
    </div>
    <div class='text-center mt-8 space-y-4'>
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
      <p class='text-xs'>Page {page.currentPage} of {page.lastPage}</p>
    </div>
  </section>
</Layout>
